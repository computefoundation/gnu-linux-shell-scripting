#!/usr/bin/env bash
# 
# Take a screenshot.
# 
# Usage:
#   screenshot [method]
# 
#   method:
#     full: entire screen (default)
#     section: section of the screen
# 
# Dependencies:
#   maim
# 

# ======= CONFIGURATIONS ==============

# Output path of screenshot files
readonly OUT_PATH="${HOME}"

# ======= ! CONFIGURATIONS ==============

if [ "$#" -ge 1 ]; then
  if [[ "${1}" != 'full' && "${1}" != 'section' && "${1}" != 'window' ]]; then
    echo 'screenshot: invalid argument' 1>&2
    exit 1
  fi

  readonly TYPE="${1}"
else
  readonly TYPE='full'
fi

# Utility function to extract a file's extension using just the file name.
# Arguments:
#   1. Filename
extractFileExtension() {
  if [[ "${1}" = *'.'* ]]; then
    local fn="${1%.*}"; local extn="${1##*.}"
    [[ "${fn}" = *'.'* ]] && extn="${fn##*.}.${extn}"
    echo "${extn}"
  fi
}

# Utility function to return the next number incremented file name.
getIncrementedFileName() {
  local fileName="${1}"
  [ "$#" -ge 2 ] && local DIR="${2}" || local DIR='.'
  local FILE_EXT="$(extractFileExtension "${fileName}")"
  [ -n "${FILE_EXT}" ] && FILE_EXT=".${FILE_EXT}"
  local FILE_BASE_NAME="${1%${FILE_EXT}*}"

  local foundFiles=($(find "${DIR}" -maxdepth 1 -type f -regextype posix-awk \
      -regex ".*/${FILE_BASE_NAME}[0-9]*${FILE_EXT}"))
  if [ "${#foundFiles[@]}" -gt 0 ]; then
    local fileNum=1
    for foundFile in "${foundFiles[@]}"; do
      local foundFile="${foundFile##*/}"
      local foundFileBaseName="${foundFile%${FILE_EXT}*}"
      local foundFileNum="$(echo "${foundFileBaseName}" | sed -e \
          's/[^0-9]//g')"
      if [ -n "${foundFileNum}" ]; then
        # If using directory names, DOS line endings must be removed for
        # foundFileNum or arithmetic operations will result in a syntax error.
        # Note: using "${foundFileNum//$'\r'/}" and other operations do not
        # work.
        [[ "${foundFileNum}" =~ [0-9]* ]] && foundFileNum="${BASH_REMATCH[0]}"
        if [ "${foundFileNum}" -gt "${fileNum}" ]; then
          fileNum="${foundFileNum}"
        fi
      fi
    done
    fileName="${FILE_BASE_NAME}$((fileNum + 1))${FILE_EXT}"
  fi
  echo "${fileName}"
}

getActvWindId() {
  echo "$(xprop -root _NET_ACTIVE_WINDOW | cut -d ' ' -f 5 | rev | cut -c 2- | \
      rev | sed 's/^0x/0x0/')"
}

fileName="screenshot-${TYPE}.png"
fileName="$(getIncrementedFileName "screenshot-${TYPE}.png" "${OUT_PATH}/")"

case "${TYPE}" in
  'full')
    maim "${OUT_PATH}/${fileName}"
    ;;
  'section')
    maim -s -c 1,0,0,0.6 "${OUT_PATH}/${fileName}"
    ;;
esac

